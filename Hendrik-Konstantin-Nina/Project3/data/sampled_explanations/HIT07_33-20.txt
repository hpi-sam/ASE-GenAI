1: getClass() not defined
2: Yes; I think that the NullPointerException is thrown when .getClass is called on the null listing in the middle of the arrays.
3: []array should be [array]
4: i++ should be i+
5: The array is being declared and pointing to an object; but the object is defined as null.
6: input for the method is passed with null;     new Class[]{String.class; null; Double.class}; ClassUtils.toClass(new Object[]{"Test";null;99d}
7: There should be some code that says that if array[i] == null; to not attempt to getClass() and just class[i] = null;
8: The array is not classified correctly
9: Trying to get the class of a null object will throw a nullpointexception
10: a null check should be included here. Check if array[i] is null. Check its not null then execute line 910.
11: The issue is actually with the use of one of the members of the array variable. On line 910; there is no check for whether array[i] is null before array[i] is dereferenced; the second member of the test input array is null; causing the exception to be thrown.
12: the getClass() method cannot read from null!
13: I think when it gets to array[i] when I is 1. It references null   So calling getClass() on null will give null pointer exception
14: the template isn't expecting a null pointer - but that's what is being passed in!
15: The second element of our input array is null. When we call the getClass method on null a NullPointerException is raised.
16: I'm not sure if the .getClass() call is actually calling anything that is defined in the programming. This could potentially be causing a null exception.
17: Yes because the line is trying to get the class of a null object.
18: As we iterate through Object's dimensions; there are null arrays in the middle. getClass doesn't work on nulls and throws a NullPointerException. You might try testing for these nulls at line 910 like so:    classes[i] = array[i] == null ? null : array[i].getClass();
19: getClass() method not defined
20: The for-loop dereferences members of the array without first checking whether they're null (this is the issue I was referring to before; though it's not technically with the variable "array.")
