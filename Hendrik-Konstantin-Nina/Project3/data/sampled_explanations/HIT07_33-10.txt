1: Not sure if it's possible; but it could be because you're trying to do get class on null at array position 1.
2: input for the method is passed with null;     new Class[]{String.class; null; Double.class}; ClassUtils.toClass(new Object[]{"Test";null;99d}
3: The array is not classified correctly
4: There should be some code that says that if array[i] == null; to not attempt to getClass() and just class[i] = null;
5: I think when it gets to array[i] when I is 1. It references null   So calling getClass() on null will give null pointer exception
6: The FOR loop should check if the element (array[i]) is null.  If yes; then set classes[i] to null.  Else; assign classes[i] to the return of getClass().
7: I believe index 1 in the array being looped through is a null; so this would cause an exception since getClass expects an object; not null.
8: The second element of our input array is null. When we call the getClass method on null a NullPointerException is raised.
9: i++ should be i+
10: The for loop itself looks fine. However; the code contained within the for loop on line 910 may be causing the problem; because it may not handle the case where array[i] is null.
