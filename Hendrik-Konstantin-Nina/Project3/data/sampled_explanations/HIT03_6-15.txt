1: The invocation will call to inspect the input at positions that are out of range (pos)
2: This code is probably the cause of the StringIndexOutOfBoundsException error.  The String index out of range 2 message seem to indicate that the variable pos is going beyond the size of variable input. On each iteration through the loop; pos is being incremented but it could already be at the end of input; so after it is incremented again; pos is going to be invalid; causing a StringIndexOutOfBoundsException error.
3: pt can go out of range of the array
4: If the codePointAt method returns a unicode character value greater than 0x10000; then charCount returns 2; which would be potentially added to pos to create a larger index value than the string length.
5: PT++ Should be PT+
6: Yes
7: This is definitely where the problem is; but I'm not sure where.
8: There is no code to prevent pt++ from exceeding len (where len = input.length();)
9: Think So
10: On line 85; a recursive call is made to the function with an improper number of arguments and expecting a return value.
11: lines 84-97 reference character counts; which seems much more correlated to the concept in the failure of being out of range. It almost seems like the amount should be 0 and that is causing the error.
12: Yes; there is an exception with surrogate pairs; so there is an issue in line 95 which deals with surrogate pairs I think. Don't understand Unicode and UTF-16 handling well enough to pinpoint the problem.
13: Checking a character in the string with pos most likely causes an error since the error is a string out of bounds
14: On line 95; there is a space between pos and += which I feel is the wrong syntax. Instead; it should be pos+=. I suspect this threw an exception.
15: The input "\uD83D\uDE30" needs to be passed through the Class StringEscapeUtils as well.
