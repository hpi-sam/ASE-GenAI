Minutes are set to -15; which is less then 0 and it throws illegal arg exception
The code never gets that far. The problem is at line 279 which prevents a negative minutes value being accepted even though the programmer comments indicate that since version 2.3 negative minutes up to -59 are acceptable. The @throws IllegalArgumentException comment is also referring to versions before 2.3.
In the code there is a check that 0 <= minutes < 60 and the minutesOffset is -15 which does not fall into these prarmeters thus throwing an Exception
There is a logical check for if minuteOffset is less than 0 or greater than 59 causing it to throw an exception because the value is out of bounds (negative number)
YES. The issue is on line 279 (as I explained in my first question; of which I misunderstood that I was only being asked about the specific issue; not generalized issue). On line 279 the variable "minutesOffSet" is parameterized to throw an exception if it is < 0 or > 59. Line 279 should read "if (minutesOffset < -59 || minutesOffset > 59) {" because now the method can take in the number of minutes as a negative and will allow the method to properly progress to invoke/call further methods such as those asked about in the two previous questions.
The variable "minutesOffset" is checked incorrectly by the IF statement on line 279. Any negative value for "minutesOffset" will throw this exception; while the documentation states that "minutesOffset" can be negative in some cases.
Again the issue remains that the parameter check for minutes at line 279 doesn't allow negative numbers  and thus throws the exception.  This needs to be changed to allow up to -59 (but only if hour is positive) if the comments are up to date ... plus possibly later code as well; but certainly that for starters. 
This variable contains a value of -15 as set by DateTimeZone.forOffsetHoursMinutes(-2; -15). Line 279 checks to see if is a valid value; meaning that is between 0 and 59. Since it is not; an exception error is thrown in line 280.
Yes; the variable gets set to -15 through the arguments above. The code specifically encounters the error on line 279 when it tests if minutesOffset < 0; (-15) which is the case; so it throws the error on line 280 : Minutes out of range: with the value provided for that argument -15.
As noted in the comments; valid input for minutes must be in the rage -59 to +59 but on line 279 of the source minutesOffset is checked for < 0. Instead it should be minutesOFfset < -59 . Also noted in comments is that versions before 2.3 minutes had to be zero or positive. "Minutes out of range: + minutesOffset" is our error.
the variable should be defined as "unsigned int" if we expect it to be always positive
minutesOffset it is the offset in minutes from UTC; must be between 0 and 59 inclusive 
this is also an int; which is a signed value.
The second argument should be just 15
The value of minutes offset does not have valid argument as a result this method will not be called as and argument exception will be displayed.
yep; they are checking if minutesOffset < 0 to throw an exception; and as -15 <0; it gets thrown. looks like they updated the comments but not the code. and this is why comments are evil liars that can't be trusted!
The error is stemming from line 279 because the value of -15 for minutesOffset is < 0. The line should be     if (minutesOffset < -59 || minutesOffset > 59) {
The definition seems fine to me. 
There should be no issue with the variable minutesOffset; as it was declared properly and should not be related to the failure when it was being used in the correct manner. minutesOffset is of type int; but it is not being miscalled anywhere in the source code.
I believe the issue is with hoursOffset not minutes
The minute variable was negative therefore; it threw the exception because it only takes numbers between 0 and 59 for minutes.
the conditional clause throws an error if the value of minutes is smaller than zero
The argument -15 is less than 0; which causes the if statement conditional on line 279 to pass. This results in the exception on line 280 being thrown. According to the comment block above the method; minutesOffset should be checked for below -59 or above 59.
There may be an issue as it involves not indigenous java
According to the comments; the minute value should be between -59 and +59; but the conditional statement is checking for a value between 0 and 59.
There is not an issue with this portion of the code; in fact this is where the exception we receive is thrown.  Therefore the issue probably occurs before we reach this part of the code; such as when the arguments are passed into the method.
Yes; this line is exactly the one that produces the exception when minutesOffset is <0. As minutesOffset; being the second argument in the function; gets the value -15 in the call to DateTimeZone.forOffsetHoursMinutes(-2; -15)
You are passing it a negative offset value (-15) and the conditionals are set to reject any offset that is less than 0 or greater than 59 and throw a new exception.
the code is incomplete. it properly checks for greater than 59 but neglects to take into account if the hours are negative before rejecting minutes for being negative. it would be more correct though not completely to check for less than -59 instead of less than 0
It will return the offset
am not good in thus questanaire
Line 279 written as "minutesOffset < 0" makes it clear it's the one throwing the Exception; as the -15 in the minutes spot is clearly less than 0.
this cause assumes all negative minutes are bad. from the comment; negative minutes are ok when the hours are negative too. the comments specifically say its bad when the mins are negative but the hours are positive. there is a line break in the middle of that part of the comment which could lead a programmer to miss half of the info.
Yes ; this conditional clause is exactly the place from where the exception is thrown ; because it is not in valid range of "minutes"
It's because of second line negative value.
This conditional will reject any negative minute input; even if the hour input is also negative.
This is the argument exception thrown.
-15 is less then 0; so it throws IllegalArgumentException
Value passed in minutes -15;where as it checks (<0 | >53).
DateTimeZone.forOffsetHoursMinutes(-2; -15) is an invalid argument so it will directly throw an exception. Hence there is no issue between the conditional statement.
